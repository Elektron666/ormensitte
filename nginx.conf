# Nginx Configuration for Ormen Tekstil Website
# High-performance, secure, and SEO-optimized setup

# Main server block for HTTPS (production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ormentekstil.com www.ormentekstil.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/ormentekstil.com.crt;
    ssl_certificate_key /etc/ssl/private/ormentekstil.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # CSP Header
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://esm.sh https://cdn.jsdelivr.net https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: http:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https:; media-src 'self' https:; object-src 'none'; frame-src 'self' https:; base-uri 'self'; form-action 'self';" always;
    
    # Document root
    root /var/www/ormentekstil/dist;
    index index.html;
    
    # Charset
    charset utf-8;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        application/font-woff
        application/font-woff2
        font/woff
        font/woff2;
    
    # Brotli compression (if module is available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        access_log off;
        
        # CORS for fonts and images
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Cache HTML with shorter expiry
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Admin panel security
    location ~* ^/(admin|admingiris) {
        # Rate limiting for admin access
        limit_req zone=admin burst=5 nodelay;
        
        # Additional security headers for admin
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
        
        # Log admin access attempts
        access_log /var/log/nginx/admin_access.log combined;
        error_log /var/log/nginx/admin_error.log warn;
        
        try_files $uri $uri/ /index.html;
    }
    
    # API routes (if any)
    location /api/ {
        # Rate limiting for API
        limit_req zone=api burst=10 nodelay;
        
        # Add JSON content type
        add_header Content-Type "application/json" always;
        
        try_files $uri $uri/ /index.html;
    }
    
    # Sitemap
    location = /sitemap.xml {
        expires 1d;
        add_header Content-Type "application/xml";
        add_header Cache-Control "public";
        try_files $uri /index.html;
    }
    
    # Robots.txt
    location = /robots.txt {
        expires 1d;
        add_header Content-Type "text/plain";
        add_header Cache-Control "public";
        access_log off;
    }
    
    # Manifest and service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Content-Type "application/manifest+json";
        add_header Cache-Control "public";
    }
    
    location = /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Content-Type "application/javascript";
    }
    
    # Handle SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add security headers for HTML pages
        location ~ \.html$ {
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
    
    # Logging
    access_log /var/log/nginx/ormentekstil_access.log combined;
    error_log /var/log/nginx/ormentekstil_error.log warn;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name ormentekstil.com www.ormentekstil.com;
    
    # Security headers even for redirects
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://www.ormentekstil.com$request_uri;
}

# Redirect non-www to www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ormentekstil.com;
    
    # SSL configuration (same as main server)
    ssl_certificate /etc/ssl/certs/ormentekstil.com.crt;
    ssl_certificate_key /etc/ssl/private/ormentekstil.com.key;
    
    return 301 https://www.ormentekstil.com$request_uri;
}

# Rate limiting zones
http {
    # Admin panel rate limiting
    limit_req_zone $binary_remote_addr zone=admin:10m rate=3r/m;
    
    # API rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # General rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
}

# Additional security configurations
# Increase buffer sizes to handle large headers
client_header_buffer_size 4k;
large_client_header_buffers 4 8k;

# Hide Nginx version
server_tokens off;

# Prevent clickjacking
add_header X-Frame-Options "SAMEORIGIN" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Enable XSS protection
add_header X-XSS-Protection "1; mode=block" always;

# SSL session configuration
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

# OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
